{
  "automation": "Automation, process control and robotic controllers",
  "automation.Behavior": "A behavior",
  "automation.Behavior.update": "Called on each behavior iteration even for suppresed behaviors",
  "automation.Behavior.update|param|elapsed": "milli seconds since last call",
  "automation.BehaviorManager": "A manager for behaviors",
  "automation.BehaviorManager.add": "Adds a new behavior to the behavior manager",
  "automation.BehaviorManager.add|param|behavior": "the behavior to add",
  "automation.BehaviorManager.start": "Starts the behavior control loop",
  "automation.BehaviorManager.stop": "Stops the execution loop",
  "automation.PIDController": "A PID controller.\n* Reference: Feedback System, Karl Johan Astrom & Rickard M. Murry",
  "automation.PIDController.compute": "Computes the output based on the system state",
  "automation.PIDController.setControlSaturation": "Sets the control saturation values",
  "automation.PIDController.setControlSaturation|param|high": "highest control value, eg: 100",
  "automation.PIDController.setControlSaturation|param|low": "lowest control value, eg: -100",
  "automation.PIDController.setDerivativeFilter": "Sets the derivative filter gain",
  "automation.PIDController.setDerivativeFilter|param|N": "the filter gain, eg:10",
  "automation.PIDController.setGains": "Sets the PID gains",
  "automation.PIDController.setGains|param|b": "setpoint weight, eg: 0.9",
  "automation.PIDController.setGains|param|kd": "derivative gain",
  "automation.PIDController.setGains|param|ki": "integral gain",
  "automation.PIDController.setGains|param|kp": "proportional gain",
  "automation.PIDController.setPoint": "Updates the desired setpoint",
  "automation.addBehavior": "Adds the behavior and starts it",
  "automation.addBehavior|param|behavior": "a behavior"
}