{
  "ArcadePhysicsEngine": "A physics engine that does simple AABB bounding box check",
  "ArcadePhysicsEngine.overlaps": "Returns sprites that overlap with the given sprite. If type is non-zero, also filter by type.",
  "ArcadePhysicsEngine.overlaps|param|sprite": "@param layer",
  "Math": "More complex operations with numbers.",
  "Math.percentChance": "Returns a random boolean that is true the given percentage of the time.",
  "Math.percentChance|param|percentage": "The percentage chance that the returned value will be true from 0 - 100",
  "Math.pickRandom": "Returns a random element from the given list",
  "Math.pickRandom|param|list": "The list to choose an element from",
  "PhysicsEngine.addSprite": "Adds sprite to the physics",
  "PhysicsEngine.collisions": "Apply collisions",
  "PhysicsEngine.move": "Apply physics",
  "Sprite": "A sprite on screem",
  "Sprite.addMovementFrame": "Set a frame on this sprite's movement animation",
  "Sprite.addMovementFrame|param|addReverseDirection": "Also add a flipped version of the sprite in the opposite direction",
  "Sprite.addMovementFrame|param|direction": "The movement direction for which this frame will be shown",
  "Sprite.addMovementFrame|param|frame": "The image for this frame",
  "Sprite.destroy": "Destroys the sprite",
  "Sprite.image": "Gets the current image",
  "Sprite.isFacing": "Determines if the movement animation is facing a given direction. Note that\nthis API will always return false if no movement frames have been added.",
  "Sprite.isHittingTile": "Determines if there is an obstacle in the given direction",
  "Sprite.isOutOfScreen": "Indicates if the sprite is outside the screen",
  "Sprite.isShowingAnimation": "Determines if the sprite is currently showing a timed animation",
  "Sprite.layer": "A bitset of layer. Each bit is a layer, default is 1.",
  "Sprite.lifespan": "Time to live in game ticks. The lifespan decreases by 1 on each game update\nand the sprite gets destroyed when it reaches 0.",
  "Sprite.onCollision": "Registers code when the sprite collides with an obstacle",
  "Sprite.onCollision|param|direction": "@param handler",
  "Sprite.onDestroyed": "Register code to run when sprite is destroyed",
  "Sprite.onOverlap": "Registers code when the sprite overlaps with another sprite",
  "Sprite.overlapsWith": "Tests if a sprite overlaps with another",
  "Sprite.say": "Display a speech bubble with the text, for the given time",
  "Sprite.say|param|text": "the text to say, eg: \":)\"",
  "Sprite.setFlag": "Sets the sprite as a ghost (which does not interact with physics)",
  "Sprite.setImage": "Sets the image on the sprite",
  "Sprite.setPosition": "Sets the sprite position",
  "Sprite.setPosition|param|x": "horizontal position",
  "Sprite.setPosition|param|y": "vertical position",
  "Sprite.startAnimation": "Queues a timed animation on the sprite without blocking the current fiber",
  "Sprite.startAnimation|param|animation": "The animation to show",
  "Sprite.startAnimation|param|duration": "The duration of the animation",
  "Sprite.startAnimation|param|flip": "Show the animation flipped over an axis",
  "Sprite.tileHitFrom": "Gets the obstacle sprite in a given direction if any",
  "Sprite.type": "The type of sprite",
  "game": "Game transitions and dialog",
  "game.ask": "Prompts the user for a boolean question",
  "game.askForString": "Ask the player for a string value.",
  "game.askForString|param|answerLength": "The maximum number of characters the user can enter (1 - 24)",
  "game.askForString|param|message": "The message to display on the text-entry screen",
  "game.ask|param|title": "@param subtitle",
  "game.debug": "Determins if diagnostics are shown",
  "game.onPaint": "Draw on screen before sprites",
  "game.onUpdate": "Updates the position and velocities of sprites",
  "game.onUpdateInterval": "Execute code on an interval. Executes before game.onUpdate()",
  "game.over": "Finish the game and display the score",
  "game.splash": "Show a title, subtitle menu",
  "game.splash|param|title": "@param subtitle",
  "info": "Head-up display\n \nHead-up display",
  "info.changeLifeBy": "Change the lives by the given amount",
  "info.changeLifeBy|param|value": "the change of lives, eg: -1",
  "info.changeScoreBy": "Change the score by the given amount",
  "info.changeScoreBy|param|value": "the amount of change, eg: 1",
  "info.highScore": "Get the last recorded high score",
  "info.life": "Get the number of lives",
  "info.saveHighScore": "Updates the high score based on the current score",
  "info.score": "Ges the current score if any",
  "info.setLife": "Set the number of lives",
  "info.setLife|param|value": "the number of lives, eg: 3",
  "info.setScore": "Set the score",
  "info.startCountdown": "Start a countdown of the given duration in seconds",
  "info.startCountdown|param|duration": "the duration of the countdown, eg: 10",
  "info.updateHighScore": "Sends the current score and the new high score",
  "scene": "Control the background, tiles and camera\n\nControl the background, tiles and camera",
  "scene.addBackgroundLayer": "Adds a moving background layer",
  "scene.addBackgroundLayer|param|distance": "distance of the layer which determines how fast it moves, eg: 10",
  "scene.backgroundImage": "Returns the background image",
  "scene.cameraFollowSprite": "The game camera follows a particular sprite",
  "scene.centerCameraAt": "Moves the camera center to a given coordinate",
  "scene.onHitTile": "Register a code handler when a collision happens",
  "scene.screenHeight": "Gets the height in pixel of the screen",
  "scene.screenWidth": "Gets the width in pixel of the screen",
  "scene.setBackgroundColor": "Sets the game background color",
  "scene.setBackgroundImage": "Sets the picture on the background",
  "scene.setTile": "Sets the tile image at the given index",
  "scene.setTileMap": "Sets the map for rendering tiles",
  "scene.setTile|param|index": "@param img",
  "sprites": "Sprites on screen",
  "sprites.SpriteMap.neighbors": "Returns a potential list of neighbors",
  "sprites.SpriteMap.overlaps": "Gets the overlaping sprites if any",
  "sprites.SpriteMap.update": "Recompute hashes for all objects",
  "sprites.TimedAnimation.addFrame": "Adds a frame to the end of the animation",
  "sprites.TimedAnimation.addFrame|param|frame": "The frame to add to the end of this animation",
  "sprites._spriteType": "Gets the sprite type",
  "sprites.create": "Creates a new sprite from an image",
  "sprites.createAnimation": "Creates a timed animation",
  "sprites.createProjectile": "Create a new sprite with given speed, and place it at the edge of the screen so it moves towards the middle.\nThe sprite auto-destroys when it leaves the screen. You can modify position after it's created.",
  "sprites.create|param|img": "the image",
  "sprites.onCreated": "Register an event when a particular kind of sprite is created",
  "sprites.onCreated|param|kind": "@param sprite",
  "sprites.onDestroyed": "Register an event when a particular kind of sprite is destroyed",
  "sprites.onDestroyed|param|kind": "@param sprite",
  "sprites.onOverlap": "Register code to run when sprites overlap"
}